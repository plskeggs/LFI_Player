//
// *********************************************************
// *                                                       *
// * Copyright 1998-2022, Lazerus Laser Systems            *
// * Author: Michael G. Svob                               *
// *                                                       *
// * File Name: Cheap3DDoc.cpp                             *
// * Description: Implementation of the CCheap3DDoc        *
// * class.                                                *
// *                                                       *
// * NOTE: This file was generated by MS Visual Studio,    *
// *       and modified by the author as necessary for     *
// *       the LFI Player application.
// *                                                       *
// * This code is distributed under the GNU Public License *
// * which can be found at...                              *
// *                                                       *
// * http://www.gnu.org/licenses/gpl.txt                   *
// *                                                       *
// *********************************************************
//

#include "stdafx.h"
#include "Cheap3D.h"

#include "Cheap3DDoc.h"

#ifdef _DEBUG
#define new DEBUG_NEW
#undef THIS_FILE
static char THIS_FILE[] = __FILE__;
#endif

/////////////////////////////////////////////////////////////////////////////
// CCheap3DDoc

IMPLEMENT_DYNCREATE(CCheap3DDoc, CDocument)

BEGIN_MESSAGE_MAP(CCheap3DDoc, CDocument)
    //{{AFX_MSG_MAP(CCheap3DDoc)
        // NOTE - the ClassWizard will add and remove mapping macros here.
        //    DO NOT EDIT what you see in these blocks of generated code!
    //}}AFX_MSG_MAP
END_MESSAGE_MAP()

/////////////////////////////////////////////////////////////////////////////
// CCheap3DDoc construction/destruction

CCheap3DDoc::CCheap3DDoc()
{
    // TODO: add one-time construction code here
    return;
}

CCheap3DDoc::~CCheap3DDoc()
{
    return;
}

BOOL CCheap3DDoc::OnNewDocument()
{
    if (!CDocument::OnNewDocument())
        return FALSE;

    // TODO: add reinitialization code here
    // (SDI documents will reuse this document)

    return TRUE;
}



/////////////////////////////////////////////////////////////////////////////
// CCheap3DDoc serialization

void CCheap3DDoc::Serialize(CArchive& ar)
{
    if (ar.IsStoring())
    {
        // TODO: add storing code here
    }
    else
    {
        // TODO: add loading code here
    }
}

/////////////////////////////////////////////////////////////////////////////
// CCheap3DDoc diagnostics

#ifdef _DEBUG
void CCheap3DDoc::AssertValid() const
{
    CDocument::AssertValid();
}

void CCheap3DDoc::Dump(CDumpContext& dc) const
{
    CDocument::Dump(dc);
}
#endif //_DEBUG

/////////////////////////////////////////////////////////////////////////////
// CCheap3DDoc commands
