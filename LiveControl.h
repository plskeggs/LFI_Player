#if !defined(AFX_LIVECONTROL_H__14340F04_4A37_42C4_A9C4_ED235E9A83CD__INCLUDED_)
#define AFX_LIVECONTROL_H__14340F04_4A37_42C4_A9C4_ED235E9A83CD__INCLUDED_

#if _MSC_VER > 1000
#pragma once
#endif // _MSC_VER > 1000

//
// *********************************************************
// *                                                       *
// * Copyright 1998-2022, Lazerus Laser Systems            *
// * Author: Michael G. Svob                               *
// *                                                       *
// * File Name: LiveControl.h                              *
// * Description: This file contains the interface for the *
// *              LiveControl dialog class.                *
// *                                                       *
// * NOTE: Some or all of the code contained in this file  *
// *       was generated by the Visual Studio MFC          *
// *       framework, and modified by the author as        *
// *       necessary for this application.                 *
// *                                                       *
// * This code is distributed under the GNU Public License *
// * which can be found at...                              *
// *                                                       *
// * http://www.gnu.org/licenses/gpl.txt                   *
// *                                                       *
// *********************************************************
//

class CCheap3DView;

/////////////////////////////////////////////////////////////////////////////
// CLiveControl dialog

const M_UINT16 MAX_LIVE_TABLE_ENTRIES = 48;
const M_UINT16 MAX_DESCRIPTION_LENGTH = 100;
const M_UINT16 MAX_LIVE_PAGES = 12;

class CLiveControl : public CDialog
{
	friend CCheap3DView;

// Construction
public:
	CLiveControl(CWnd* pParent = NULL);   // standard constructor

	M_UINT16 GetQueButtonStatus(void) {return queButtonStatus;}
	void   SetQueButtonStatus(M_UINT16 newStatus) 
	{queButtonStatus = newStatus;}

	// Dialog Data
	//{{AFX_DATA(CLiveControl)
	enum { IDD = IDD_LIVE_CONTROL_DIALOG };
	CSliderCtrl	m_SliderLiveFrameRepeat;
	CSliderCtrl	m_SliderLiveFadeOut;
	CSliderCtrl	m_SliderLiveFadeIn;
	CSliderCtrl	m_SliderLiveColorIntensity;
	CString	m_LiveDescription;
	UINT	m_EditLiveFadeIn;
	UINT	m_EditLiveFadeOut;
	int		m_EditLiveFrameRepeat;
	UINT	m_EditLiveColorIntensity;
	//}}AFX_DATA

// Overrides
	// ClassWizard generated virtual function overrides
	//{{AFX_VIRTUAL(CLiveControl)
	protected:
	virtual void DoDataExchange(CDataExchange* pDX);    // DDX/DDV support
	//}}AFX_VIRTUAL

// Implementation
protected:
	// Generated message map functions
	//{{AFX_MSG(CLiveControl)
	virtual BOOL OnInitDialog();
	afx_msg void OnLiveButton1();
	afx_msg void OnLiveButton2();
	afx_msg void OnLiveButton3();
	afx_msg void OnLiveButton4();
	afx_msg void OnLiveButton5();
	afx_msg void OnLiveButton6();
	afx_msg void OnLiveButton7();
	afx_msg void OnLiveButton8();
	afx_msg void OnLiveButton9();
	afx_msg void OnLiveButton10();
	afx_msg void OnLiveButton11();
	afx_msg void OnLiveButton12();
	afx_msg void OnLiveButton13();
	afx_msg void OnLiveButton14();
	afx_msg void OnLiveButton15();
	afx_msg void OnLiveButton16();
	afx_msg void OnLiveButton17();
	afx_msg void OnLiveButton18();
	afx_msg void OnLiveButton19();
	afx_msg void OnLiveButton20();
	afx_msg void OnLiveButton21();
	afx_msg void OnLiveButton22();
	afx_msg void OnLiveButton23();
	afx_msg void OnLiveButton24();
	afx_msg void OnLiveButton25();
	afx_msg void OnLiveButton26();
	afx_msg void OnLiveButton27();
	afx_msg void OnLiveButton28();
	afx_msg void OnLiveButton29();
	afx_msg void OnLiveButton30();
	afx_msg void OnLiveButton31();
	afx_msg void OnLiveButton32();
	afx_msg void OnLiveButton33();
	afx_msg void OnLiveButton34();
	afx_msg void OnLiveButton35();
	afx_msg void OnLiveButton36();
	afx_msg void OnLiveButton37();
	afx_msg void OnLiveButton38();
	afx_msg void OnLiveButton39();
	afx_msg void OnLiveButton40();
	afx_msg void OnLiveButton41();
	afx_msg void OnLiveButton42();
	afx_msg void OnLiveButton43();
	afx_msg void OnLiveButton44();
	afx_msg void OnLiveButton45();
	afx_msg void OnLiveButton46();
	afx_msg void OnLiveButton47();
	afx_msg void OnLiveButton48();
	afx_msg void OnClose();
	afx_msg void OnCloseButton();
	afx_msg void OnLivePage1();
	afx_msg void OnLivePage2();
	afx_msg void OnLivePage3();
	afx_msg void OnLivePage4();
	afx_msg void OnLivePage5();
	afx_msg void OnLivePage6();
	afx_msg void OnLivePage7();
	afx_msg void OnLivePage8();
	afx_msg void OnLivePage9();
	afx_msg void OnLivePage10();
	afx_msg void OnLivePage11();
	afx_msg void OnLivePage12();
	afx_msg void OnNcRButtonDown( UINT nHitTest, CPoint point );
	afx_msg void OnVScroll(UINT nSBCode, UINT nPos, CScrollBar* pScrollBar);
	//}}AFX_MSG
	DECLARE_MESSAGE_MAP()

protected:
	// 
	M_UINT16 ReadCLVFile(const char* fileName);
	void EmptyTables(void);
    void SetPage(M_UINT16 pageNumber);

	void LivePageNext();
	void LivePagePrevious();

private:
	typedef struct
	{
        FILE*     filePointer;
	    char      fileDescription[MAX_DESCRIPTION_LENGTH];
	}LIVE_TABLE_ENTRY_T;

	typedef struct
	{
        LIVE_TABLE_ENTRY_T* tableEntries[MAX_LIVE_TABLE_ENTRIES];
        M_UINT16 currentTableEntry;
	}LIVE_TABLE_T;

	LIVE_TABLE_T livePages[MAX_LIVE_PAGES];
	M_UINT16 currentPage;
	M_UINT16 currentButton;


    CButton liveButtonArray[MAX_LIVE_TABLE_ENTRIES];
	CButton pageButtonArray[MAX_LIVE_PAGES];
	BOOL pageButtonEnabledArray[MAX_LIVE_PAGES];

//	LIVE_TABLE_ENTRY_T* liveTable[MAX_LIVE_TABLE_ENTRIES];

	CCheap3DView*  parentPtr;
	M_UINT16         queButtonStatus;

	void DoButton(M_UINT16 buttonNumber);
	void SetColorIntensity(UINT intensity);

};

//{{AFX_INSERT_LOCATION}}
// Microsoft Visual C++ will insert additional declarations immediately before the previous line.

#endif // !defined(AFX_LIVECONTROL_H__14340F04_4A37_42C4_A9C4_ED235E9A83CD__INCLUDED_)
